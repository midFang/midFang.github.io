<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Compose on midFang&#39;s Blog</title>
    <link>https://midFang.github.io/tags/compose/</link>
    <description>Recent content in Compose on midFang&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 27 Sep 2023 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://midFang.github.io/tags/compose/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Compose 自定义绘制</title>
      <link>https://midFang.github.io/compose-custom-drawing/</link>
      <pubDate>Wed, 27 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://midFang.github.io/compose-custom-drawing/</guid>
      <description>在 Compose 中，绘制的 Api 有 drawBehind drawWithContent 或者是使用完成自定义绘制方式 Canvas，接下来就来看看他们是如何使用的 在已有内容上绘制 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</description>
    </item>
    
    <item>
      <title>Compose 中的固有特性测量和自定义绘制顺序</title>
      <link>https://midFang.github.io/intrinsic-property-measurement-and-custom-plotting-order-in-compose/</link>
      <pubDate>Fri, 15 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://midFang.github.io/intrinsic-property-measurement-and-custom-plotting-order-in-compose/</guid>
      <description>固有特性测量是什么 在解释固有特性测量是怎么之前，我们先看这样的例子 假设我们要实现上面的代码的效果，也就是中间线条的宽度是根据两边文字动态来计</description>
    </item>
    
    <item>
      <title>Compose LayoutModifier 原理解析</title>
      <link>https://midFang.github.io/compose-layoutmodifier-analysis/</link>
      <pubDate>Thu, 24 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://midFang.github.io/compose-layoutmodifier-analysis/</guid>
      <description>LayoutModifier 作用是修改 Composable 的尺寸和位置偏移 LayoutModifier 只是一个接口，在实际开发中我们会使用 Modifier.layout() 自定义测量和位置偏移处理，先大致了解一下 layout 源码 1 2 3 4 5 6 7 8 9 10 11 12</description>
    </item>
    
    <item>
      <title>CombinedModifier 和 ComposedModifier 原理分析</title>
      <link>https://midFang.github.io/combinedmodifier-composedmodifier-analysis/</link>
      <pubDate>Thu, 20 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://midFang.github.io/combinedmodifier-composedmodifier-analysis/</guid>
      <description>在 Compose 中，Modifier 的调用顺序不同，它造成的结果是不一样的，而不像原生的 XML 一样，顺序并不会影响界面绘制的结果。而在 Compose 中，它是按照Modi</description>
    </item>
    
    <item>
      <title>Compose 动画终章进阶篇</title>
      <link>https://midFang.github.io/compose-animation-final-chapter-advanced-chapter/</link>
      <pubDate>Wed, 05 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://midFang.github.io/compose-animation-final-chapter-advanced-chapter/</guid>
      <description>AnimatedVisibility 对单个控件做显示和隐藏的动画效果 在上一个章节我们学习了 Transition 动画，这一节学习它更加上层的 Api，但其实内部本质上使用的也是 Transition, 先看一下 AnimatedVisibility 的源码,</description>
    </item>
    
    <item>
      <title>Compose转场动画之 Transition</title>
      <link>https://midFang.github.io/compose-transition/</link>
      <pubDate>Sun, 11 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://midFang.github.io/compose-transition/</guid>
      <description>前言 在上两篇文章中，我们了解了 Compose 中动画的各种 animationSpec 的使用和 anim.xxx 的方法参数使用说明，这节开始学习 Transition 的使用 Transition 可对多个属性值进行动画 在 Android 原生中, Transition 动画是</description>
    </item>
    
    <item>
      <title>Compose之衰减型动画</title>
      <link>https://midFang.github.io/compose-animatedecay/</link>
      <pubDate>Tue, 30 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://midFang.github.io/compose-animatedecay/</guid>
      <description>前言 回顾上篇文章我们学习了 compose 中的 animateTo 、 snapTo 如何使用，和 animationSpec 的参数配置等等，这篇文章，我们学习 Animatable 中另外一个方法 animateDecay animateDecay 衰减型动画， 它只有一个实现类 DecayAnimationSpecImpl 有了</description>
    </item>
    
    <item>
      <title>Compose 动画基础篇之各种 Spec</title>
      <link>https://midFang.github.io/compose-animation-basics/</link>
      <pubDate>Sat, 20 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://midFang.github.io/compose-animation-basics/</guid>
      <description>从这一节开始，我们开始讲解 compose 最基础的动画 Api 使用，最基础也是最重要的部分，掌握这些基础的配置，会对后面的高阶动画的使用配置更加的得心应手 状态转</description>
    </item>
    
  </channel>
</rss>