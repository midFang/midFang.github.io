<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>View on midFang&#39;s Blog</title>
    <link>https://midFang.github.io/tags/view/</link>
    <description>Recent content in View on midFang&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 07 Nov 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://midFang.github.io/tags/view/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>理解 Android 中的 window 与悬浮窗的实现</title>
      <link>https://midFang.github.io/post/android-window-suspension-view/</link>
      <pubDate>Sat, 07 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://midFang.github.io/post/android-window-suspension-view/</guid>
      <description>&lt;h3 id=&#34;window-是什么&#34;&gt;Window 是什么&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Window 是一个相对概念上的载体，他并不是一个真正的容器，仅仅负责管理依赖 window 上面的 View 的一个类，充当管理者。&lt;/li&gt;
&lt;li&gt;Window 是一个抽象类，在源码实现中，只有一个具体的实现类，phoneWindow&lt;/li&gt;
&lt;li&gt;创建 Window 需要通过 WindowManager 创建&lt;/li&gt;
&lt;li&gt;WindowManager 是外界访问 Window 的入口&lt;/li&gt;
&lt;li&gt;Window 具体实现位于 WindowManagerService 中&lt;/li&gt;
&lt;li&gt;WindowManager 和 WindowManagerService 的交互是通过 IPC 完成&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;activity-和-window-之间的关系&#34;&gt;Activity 和 Window 之间的关系&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>View 的 draw 过程</title>
      <link>https://midFang.github.io/post/view-draw-process/</link>
      <pubDate>Sun, 29 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://midFang.github.io/post/view-draw-process/</guid>
      <description>Draw 过程 View 的工作流程主要是 measure layout draw 这三大流程完成的, 测量, 布局, 绘制, 其中 measure 测量布局的宽高, layout 确定 View 在布局中 4 个顶点的位置, draw 则是将布局绘制在屏</description>
    </item>
    
    <item>
      <title>View 的 Layout 摆放过程</title>
      <link>https://midFang.github.io/post/view-layout-process/</link>
      <pubDate>Sun, 29 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://midFang.github.io/post/view-layout-process/</guid>
      <description>Layout 过程 layout 的作用是 ViewGroup 用来确定子元素的位置 View 的工作流程主要是 measure layout draw 这三大流程完成的, 测量, 布局, 绘制, 其中 measure 测量布局的宽高, layout 确定 View 在布局中 4 个</description>
    </item>
    
    <item>
      <title>View 的 measure 测量过程</title>
      <link>https://midFang.github.io/post/view-measure-process/</link>
      <pubDate>Sun, 29 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://midFang.github.io/post/view-measure-process/</guid>
      <description>View 的测量过程 View 的工作流程主要是 measure layout draw 这三大流程完成的, 测量, 布局, 绘制, 其中 measure 测量布局的宽高, layout 确定 View 在布局中 4 个顶点的位置, draw 则是将布局绘</description>
    </item>
    
    <item>
      <title>Android 测量规格 MeasureSpec</title>
      <link>https://midFang.github.io/post/android-custom-view-measurespec/</link>
      <pubDate>Sat, 28 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://midFang.github.io/post/android-custom-view-measurespec/</guid>
      <description>MeasureSpec MeasureSpec 代表的是一个 32 位的 int 值，高2位代表 SpecMode，低 30 位代表 SpecSize，SpecMode 指的测量模式，SpecSize 是指在某种</description>
    </item>
    
  </channel>
</rss>