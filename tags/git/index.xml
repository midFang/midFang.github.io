<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on midFang&#39;s Blog</title>
    <link>https://midFang.github.io/tags/git/</link>
    <description>Recent content in Git on midFang&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 05 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://midFang.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git 管理 .gitignore file 文件的使用</title>
      <link>https://midFang.github.io/post/git-gitignore-file-use/</link>
      <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://midFang.github.io/post/git-gitignore-file-use/</guid>
      <description>&lt;h2 id=&#34;git-忽略文件的原则&#34;&gt;Git 忽略文件的原则&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;忽略操作系统自动生成的文件，比如缩略图等&lt;/li&gt;
&lt;li&gt;忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如 Java 编译产生的 .class 文件&lt;/li&gt;
&lt;li&gt;忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>清空 git 提交的以往所有历史记录</title>
      <link>https://midFang.github.io/post/clear-git-commit-cache/</link>
      <pubDate>Thu, 20 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://midFang.github.io/post/clear-git-commit-cache/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;

&lt;p&gt;为什么要清空提交的历史记录呢 ？&lt;/p&gt;

&lt;p&gt;在使用 Git 进行仓库代码管理的时候，难免不注意会提交一些隐私的信息，即使是后面删除了，但还是能够从 Git 的历史记录可以找的到以往提交的信息。而且大部分开发者都是使用 Public Repository 公开的仓库，别人 clone 下来的话，那么就会造成隐式信息的直接暴露。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>git使用代理加速，修改代理方式</title>
      <link>https://midFang.github.io/post/git-use-proxy/</link>
      <pubDate>Mon, 10 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://midFang.github.io/post/git-use-proxy/</guid>
      <description>&lt;p&gt;最近 git clone 一个项目真的是太慢了，每秒 7kb。。。电脑上也刚好有 ti 子，试试能不能让 git 工具走代理的方式，能不能更快些，实测效果好了很多，设置如下&lt;/p&gt;

&lt;h3 id=&#34;设置使用代理&#34;&gt;设置使用代理&lt;/h3&gt;

&lt;p&gt;将你的proxy server地址代替以下的127.0.0.1&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>